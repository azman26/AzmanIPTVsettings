**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: bb199_plextv
* @MinSWversion: V2.1.5
* @Revision 0 - [05/07/2018] Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=bb199_plextv|timezone=UTC|maxdays=7.1|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90|keepindexpage|nopageoverlaps}
site {ratingsystem=US|episodesystem=onscreen|compression=gzip}
*
url_index {url|http://bb199.ddns.net:15500/epgdata/plextv/webgrab-user/plextv.xml}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
global_temp_1.modify {set|'config_site_id'}
global_temp_1.modify {cleanup(style=regex)}
index_urlchannellogo.scrub {regex||<channel id="'global_temp_1'">(?:.*?)(?:<icon src="(.*?)" />(?:.*?))*</channel>||}
*
index_showsplit.scrub {regex||<programme start="[^"]*" stop="[^"]*" channel="'global_temp_1'">.*?</programme>||}
*index_showsplit.modify {(debug)}
*
index_start.scrub {regex||start="(\d{12})\d{2}\s[-+]\d{4}"||}
index_stop.scrub {regex||stop="(\d{12})\d{2}\s[-+]\d{4}"||}
index_title.scrub {single|<title|>|</title>|</title>}
*index_title.scrub {single|<title lang="xx">||</title>|</title>}
*index_titleoriginal.scrub {single|<title lang="en">||</title>|</title>}
index_subtitle.scrub {single|<sub-title|>|</sub-title>|</sub-title>}
index_description.scrub {single|<desc|>|</desc>|</desc>}
index_actor.scrub {multi|<actor>||</actor>|</actor>}
index_director.scrub {multi|<director>||</director>|</director>}
index_writer.scrub {multi|<writer>||</writer>|</writer>}
index_producer.scrub {multi|<producer>||</producer>|</producer>}
index_presenter.scrub {multi|<presenter>||</presenter>|</presenter>}
index_productiondate.scrub {single|<date>||</date>|</date>}
index_country.scrub {single|<country>||</country>|</country>}
index_category.scrub {multi|<category|>|</category>|</category>}
index_rating.scrub {multi|<rating|<value>|</value>|</rating>}
index_starrating.scrub {single|<star-rating>|<value>|</value>|</star-rating>}
index_episode.scrub {single(pattern="S'S1'E'E1'/'Et1'P'P1'""S'S1'E'E1'P'P1'""S'S1'E'E1'/'Et1'""S'S1'E'E1'""S'S1'""E'E1'/'Et1'""E'E1'""P'P1'")|<episode-num|>|<|/episode-num>}
index_showicon.scrub {regex||<icon src="(.*?)" />(?:[^<]*<rating[^>]*>.*?</rating>)?[^<]*</programme>$||}
*
index_title.modify {cleanup(style=htmldecodespecialchar)}
*index_titleoriginal.modify {cleanup(style=htmldecodespecialchar)}
index_subtitle.modify {cleanup(style=htmldecodespecialchar)}
index_description.modify {cleanup(style=htmldecodespecialchar)}
index_actor.modify {cleanup(style=htmldecodespecialchar)}
index_director.modify {cleanup(style=htmldecodespecialchar)}
index_writer.modify {cleanup(style=htmldecodespecialchar)}
index_producer.modify {cleanup(style=htmldecodespecialchar)}
index_presenter.modify {cleanup(style=htmldecodespecialchar)}
index_category.modify {cleanup(style=htmldecodespecialchar)}
*
*index_titleoriginal.modify {addend(not "")|(lang=en)}
*
scope.range {(indexshowdetails)|end}
index_temp_9.scrub {regex||start="\d{14}\s([-+]\d{4})"||}
index_temp_8.modify {substring(type=char)|'index_temp_9' 1 4}
index_temp_9.modify {substring(type=char)|0 1}
index_temp_7.modify {substring(type=char)|'index_temp_8' 0 2}
index_temp_8.modify {substring(type=char)|2 4}
index_temp_8.modify {addstart|'index_temp_7':}
index_temp_8.modify {calculate(format=time,H:mm)}
*
index_temp_1.modify {substring(type=char)|'index_start' 0 4} * year
index_temp_1.modify {addend|/}
index_temp_2.modify {substring(type=char)|'index_start' 4 2} * month
index_temp_1.modify {addend|'index_temp_2'/}
index_temp_2.modify {substring(type=char)|'index_start' 6 2} * day
index_temp_1.modify {addend|'index_temp_2' }
index_temp_2.modify {substring(type=char)|'index_start' 8 2} * hour
index_temp_1.modify {addend|'index_temp_2':}
index_temp_2.modify {substring(type=char)|'index_start' 10 2} * minute
index_start.modify {set|'index_temp_1''index_temp_2'}
index_start.modify {calculate('index_temp_9' "-" format=date,unix)|0:'index_temp_8' +}
index_start.modify {calculate('index_temp_9' "+" format=date,unix)|0:'index_temp_8' -}
*
index_temp_1.modify {substring(type=char)|'index_stop' 0 4} * year
index_temp_1.modify {addend|/}
index_temp_2.modify {substring(type=char)|'index_stop' 4 2} * month
index_temp_1.modify {addend|'index_temp_2'/}
index_temp_2.modify {substring(type=char)|'index_stop' 6 2} * day
index_temp_1.modify {addend|'index_temp_2' }
index_temp_2.modify {substring(type=char)|'index_stop' 8 2} * hour
index_temp_1.modify {addend|'index_temp_2':}
index_temp_2.modify {substring(type=char)|'index_stop' 10 2} * minute
index_stop.modify {set|'index_temp_1''index_temp_2'}
index_stop.modify {calculate('index_temp_9' "-" format=date,unix)|0:'index_temp_8' +}
index_stop.modify {calculate('index_temp_9' "+" format=date,unix)|0:'index_temp_8' -}
*
index_description.modify {cleanup}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
@auto_xml_channel_start
index_site_id.scrub {regex||<channel [^>]*id="[^\"]*"[^>]*>.*?</channel>||}
scope.range {(channellist)|end}
index_site_channel.modify {addstart|'index_site_id'}
index_site_id.modify {substring(type=regex)|<channel [^>]*id="([^\"]*)"[^>]*>}
index_site_id.modify {cleanup(style=htmldecodespecialchar)}
index_site_channel.modify {substring(type=regex)|<display-name\s*[^>]*>(.*?)</display-name>}
index_site_channel.modify {cleanup(style=htmldecodespecialchar)}
index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
end_scope
@auto_xml_channel_end
